# ---------------NEW RULES - Space Jam MESSAGES-------------------------#
# --------------Templates for System General Acts-----------------------#
template welcomemsg(variant): "Hello, let's get started!"
template bad(variant): "Sorry, I didn't understand that. Could you please say it again in other words?"
template bad(variant)
    if variant = "1": "I'm Sorry, I couldn't understand that. Could you try rephrasing?"
    if variant = "2": "What do you mean by that?"
    if variant = "3": "Sorry, what? Could you please rephrase that?"
template closingmsg(variant): "Goodbye!"
template closingmsg(condition, variant):
    if condition = "win": "We solved it! Thanks for playing, goodbye!"
template slowdown(variant): "Could you please slow down a bit? I can't keep track with so much info at once! Please tell me only one thing at a time."

# --------- Helper Functions -------- #

function cap_name(name)
	"{cap_name(name)}"

function decode_position(position)
    if position = "0": "first"
    if position = "1": "second"
    if position = "2": "third"
    if position = "3": "fourth"
    if position = "4": "fifth"
    if position = "last": "last"
    if position = "last_blue": "last blue"
    if position = "first_blue": "first blue"
    if position = "last_green": "first green"
    if position = "second_last": "second to last"

function serialize_list(values)
    "{for(values, "placeholder", ", ", ", ")}"

function placeholder(value)
    "{value}"

function decode_number(number)
    "{number}"
    if number = "0": "no"
    if number = "1": "one"
    if number = "2": "two"
    if number = "3": "three"
    if number = "4": "four"
    if number = "5": "five"
    if number = "6": "six"
    if number = "7": "seven"
    if number = "8": "eight"
    if number = "9": "nine"
    if number = "10": "ten"
    if number = "11": "eleven"
    if number = "12": "twelve"

function describe(module)
    if module = "dials_module": "This module is made up of one or more half circle dials, do you see it?"
    if module = "button_seq_module": "There should be a single row of buttons somewhere on the dashboard, do you see it?"
    if module = "switches_module": "There should be a stack of four switches somewhere on the dashboard, do you see it?"
    if module = "button_array_module": "This module is a 3 x 4 array of buttons. Do you see it?"
    if module = "slider": "The slider is a vertical bar made of green, yellow, amber, orange, and red sections. There should be a pointer indicating the current slider level. Do you see it?"
    if module = "warp_drive_percent": "The Warp Drive Power is given as a percentage somewhere on the dashboard, do you see it?"

function decode_module(module)
    if module = "dials_module": "Dials Module"
    if module = "button_seq_module": "Button Sequence Module"
    if module = "switches_module": "Switches Module"
    if module = "button_array_module": "Button Array Module"
    if module = "slider": "Slider"

function info_by_module(slot, value, module)
    if slot = "num_half_dials": "there are {value} half dials"
#    if slot = "num_full_dials": "there are {value} full dials"
    if slot = "left_dial_pointer": "the left dial pointer points to the {value}"
    if slot = "right_dial_pointer": "the right dial pointer points to the {value}"
    if slot = "left_dial_number": "the marked number in the left dial is {value}"
    if slot = "right_dial_number": "the marked number in the right dial is {value}"
    if slot = "active_column": "the active button is in the {decode_position(value)} column"
    if slot = "seq_len": "there are {decode_number(value)} clickable buttons"
    if slot = "slider": "the slider is {value}"
    if slot = "warp_drive_percent": "we have {multiply_by_hundred(value)}% warp drive power left"
    if slot = "color_seq"
        "the color sequence is {serialize_list(value)}"
        if module = "button_seq_module": "the order of the clickable buttons is {serialize_list(value)}"
        if module = "switches_module": "the order of the switches is {serialize_list(value)}"

function info(slot, value)
    if slot = "num_half_dials": "there are {decode_number(value)} half dials"
    if slot = "slider": "the slider color is {value}"
    if slot = "left_dial_number": "the left dial pointer is pointing to the number {value}"
    if slot = "right_dial_pointer": "the right dial pointer is pointing to the {value}"
    if slot = "seq_len": "there are {decode_number(value)} clickable buttons"
    if slot = "color_seq": "the color sequence is {serialize_list(value)}"
    if slot = "active_column": "the active button was in the {decode_position(value)} column"
    if slot = "current_round": "this is the {decode_position(value)} stage"

#------------------Templates for RequestMore---------------------------#
template reqmore(variant): "I'm sorry, what did I get wrong?"
template reqmore(color_seq, variant): "I'm sorry, I thought that the color sequence is {serialize_list(color_seq)}. Where did I go wrong?"

#------------------Templates for System Requests------------------------#
template request(object, position, variant)
    if object = "column"
        if variant = "1": "Which column is the active button in?"
        if variant = "2": "Can you tell me which column the active button is in?"
        if variant = "3": "Okay, which column is the active button in now?"
    if object = "left_dial"
        if variant = "1": "Which direction is the pointer on the left dial pointing to? (left, right, or middle)?"
        if variant = "2": "Can you tell me where the pointer on the left dial is pointing to? To the left, right or middle?"
        if variant = "3": "Okay, is the left dial pointing to the left, right or middle?"
    if object = "right_dial"
        if variant = "1": "Which direction is the pointer on the right dial pointing to? (left, right, or middle)?"
        if variant = "2": "Can you tell me where the pointer on the right dial is pointing to? To the left, right or middle?"
        if variant = "3": "Okay, is the right dial pointing to the left, right or middle?"

template request(position, object, color, variant)
    if object = "switch"
        if variant = "1": "What color is the {decode_position(position)} switch?"
        if variant = "2": "Okay, what color is the {decode_position(position)} switch?"
        if variant = "3": "What's the color of the {decode_position(position)} switch?"
    if object = "enabled_button"
        if variant = "1":
            "What color is the {decode_position(position)} clickable (colorful border) button?"
            if position = "0": "What color is the first clickable button? Clickable buttons have a blue, amber, or green border."
        if variant = "2"
            "Okay, what color is the {decode_position(position)} clickable (colored border) button?"
            if position = "0": "What is the color of the first clickable (amber, blue, or green border) button?"
        if variant = "3"
            "What's the color of the {decode_position(position)} clickable (color border) button?"
            if position = "0": "What's the color of the first clickable (amber, blue, or green border) button?"


template request(object, number, variant)
    if object = "half_dial"
        if variant = "1": "How many half dials are there?"
        if variant = "2": "How many dials are there on the control panel?"
        if variant = "3": "How many half circle dials are there on the dashboard?"
    if object = "full_dial"
        if variant = "1": "How many full circle dials are there?"
        if variant = "2": "How many dials are full circles?"
        if variant = "3": "How many full circle dials are there on the dashboard?"
    if object = "left_dial"
        if variant = "1": "What number is the pointer on the left dial pointing to?"
        if variant = "2": "Okay, which number is the left dial pointing at?"
        if variant = "3": "The left dial should be pointing to a number, which one is it?"
    if object = "right_dial"
        if variant = "1": "What number is the pointer on the right dial pointing to?"
        if variant = "2":"What is the number the right dial is pointing to?"
        if variant = "3": "What's the number of the right dial?"


template request(object, color, variant)
    if object = "slider"
        if variant = "1": "What color is the slider?"
        if variant = "2": "What is the slider color right now?"
        if variant = "3": "What's the color of the slider?"



#-------------Templates for System Inform---------------#

template inform(object, action, variant)
    if object = "dials"
        if action = "point_middle"
            if variant = "1": "Therefore, you should move both pointers to the middle position."
            if variant = "2": "This means you should set the pointers of both dials to the middle position."
            if variant = "3": "So you should set both pointers to the middle position."
        if action = "largest_odd"
            if variant = "1": "Therefore, you should move the pointers to the largest odd number on each dial."
            if variant = "2": "This means you should set each pointer to the largest odd number."
            if variant = "3": "So you should set both pointers to the largest odd number on each dial."
        if action = "one_left_one_right"
            if variant = "1": "Therefore, move the pointer on the left dial one position to the right, and move the pointer on the right dial one position to the left."
            if variant = "2": "This means you should set the left dial pointer one position to the right, and the right dial pointer one position to the left."
            if variant = "3": "You should then move the left dial pointer one position to the right, and the right dial pointer one position to the left."
        if action = "far_left_far_right"
            if variant = "1": "Therefore, set the pointer of the left dial to the far left, and the pointer of the right dial to the far right position."
            if variant = "2": "This means you should set the pointer of the left dial to the far left position, and the pointer of the right dials to the far right one."
            if variant = "3": "You should then set the pointer of the left dial to the far left, and the pointer of the right dial to the far right position."
    if object = "column"
        if action = "button_round_1"
            if variant = "1": "Therefore, push the same button you did in the first round."
            if variant = "2": "This means you should activate the same button now that you did in the round one."
            if variant = "3": "So you should activate the same button as you did in the first round."
        if action = "button_round_2"
            if variant = "1": "Therefore, activate the same button that you did in the second round."
            if variant = "2": "This means you should now push the same button that you did in round two."
            if variant = "3": "So you should activate the same button as you did in the second round."
        if action = "button_round_3"
            if variant = "1": "Therefore, push the same button that you did in the third round."
            if variant = "2": "This means you should push the same button now that did in round three."
            if variant = "3": "So you should activate the same button as you did in the third round."
        if action = "color_round_2"
            if variant = "1": "Therefore, press the first button in the second column with the same color as the button you activated in the second round."
            if variant = "2": "This means you should push the first button in the second column that has the same color as the button you pushed in the second round."
            if variant = "3": "So you should  activate the first button in the second column with the same color as the button you activated in the second round."


template inform(object, position, variant)
    if object = "enabled_button"
        if variant = "1": "Therefore, activate the {decode_position(position)} button."
        if variant = "2": "This means you should push the {decode_position(position)} button."
        if variant = "3": "So you should active the {decode_position(position)} enabled button."

template inform(object, position, action, variant)
    if object = "switch"
        if variant = "1": "Therefore, activate the {action} side of this switch."
        if variant = "2": "This means you should push the {action} side."
        if variant = "3": "So you should activate its {action} side."
    if object = "column"
        if action = "first_button_same_color"
            if variant = "1": "Therefore, activate the first button which has the same color as the active button and is in the {decode_position(position)} column."
            if variant = "2": "This means you should push the first button that is the same color as the active one and in the {decode_position(position)} column."
            if variant = "3": "So you should activate the first button which has the same color as the active button and is in the {decode_position(position)} column."
        if action = "last_button_same_color"
            if variant = "1": "Therefore, activate the last button which has the same color as the active button and is in the {decode_position(position)} column."
            if variant = "2": "This means you should push the last button that is the same color as the active one and in the {decode_position(position)} column."
            if variant = "3": "So you should activate the last button which has the same color as the active button and is in the {decode_position(position)} column."
        if action = "second_button"
            if variant = "1": "Therefore, activate the second button in the {decode_position(position)} column."
            if variant = "2": "This means you should push the second button in the {decode_position(position)} column."
            if variant = "3": "So you should activate the second button in the {decode_position(position)} column."
        if action = "color_round_2"
            if variant = "1": "Therefore, press the first button in the second column with the same color as the button you activated in the second round."
            if variant = "2": "This means you should push the first button in the second column that has the same color as the button you pushed in the second round."
            if variant = "3": "So you should activate the first button in the second column with the same color as the button you activated in the second round."


#-------------Templates for System Describe---------------#
template describe(color, verbose, variant)
    if variant = "1": "Colors for Buttons and Switches are: Blue, Green, or Amber. Colors for the slider, from top to bottom, are: Green, Yellow, Amber, Orange, Red"
    if variant = "2": "The buttons and switches can come in blue, green and amber. The colors of the slider are, in order: green, yellow, amber, orange and red."
    if variant = "3": "Buttons and switches are either blue, green or amber. The slider starts with green at the top, then yellow, amber, orange, and finally red at the bottom."


template describe(object, verbose, variant)
    if object = "slider"
        if variant = "1": "The Slider is a vertical bar with five sections of different size and color. The color sequence from top to bottom is green, yellow, amber, orange, and red. A triangular pointer should be sitting in one of the sections. This indicates your current slider level (which is one of the five colors). Do you see it?"
        if variant = "2": "Ok, so the slider is a vertical bar in five different colors. It starts with green at the top, the next colors are yellow, amber, and orange, and finally red. There should as be some kind of pointer that indicates the slider level. Can you see it?"
        if variant = "3": "The slider should be a vertical bar with five sections in different colors and a pointer. The colors, from top to bottom, should be green, yellow, amber, orange, and red. There should be a pointer at one of these colors showing our current slider level. Do you see it?"

template describe(module, verbose, variant)
    if verbose = "True"
        if module = "dials_module"
            if variant = "1": "The Dials Module is made of one or more half dials which can be spread out across the dashboard. Each dial consists of several numbered panels and an indicator that points to one of the numbers. Do you see it?"
            if variant = "2": "Ok, so the dials module consists of on or more half-cirlce dials. The dials aren't necessarily next to each other. Each dial consists of five sections each labeled with a number. And on each dial, there is an indicator pointer that points to one of the sections. Can you see it?"
            if variant = "3": "The dials module should consist of one or more half circles dials with numbered panels. In the middle of each dial, there should be some kind of pointer, directed at one of the numbered panels. Do you see it?"
        if module = "button_seq_module"
            if variant = "1": "The Button Sequence Module is made of five round buttons in a single row. Each button has a border either in color or in light grey. The ones with a colored border are clickable and the buttons with a light grey border are disabled. All of them should have a grey fill color. Do you see it?"
            if variant = "2": "Ok, so the button sequence module consists of a single row of five round buttons in different colors. Some buttons may have a light grey border: those are disabled. The other buttons are grey in the middle but have a colorful border: those are clickable. Can you see it?"
            if variant = "3": "The button sequence module should be a single row of five buttons, all have a grey fill color but a different color for their border. If the border is light grey, the button is disabled, otherwise it is clickable. Do you see it?"
        if module = "switches_module"
            if variant = "1": "The Switches Module is made of four vertically stacked switches. Each switch should have a left and a right side. Do you see it?"
            if variant = "2": "Ok, so the switches module consists of four switches in a vertical column. The switches are split in two, so they have a left side and a right side. Can you see it?"
            if variant = "3": "The switches module should consist of four switches that are stacked vertically in a column. Each should have a left side and a ride side. Do you see it?"
        if module = "button_array_module"
            if variant = "1": "The Button Array Module is made of four rows and three columns of round buttons. Each button should have a colored border and all but one button should have a grey fill color. The button with a fill color matching its border is the active button. Do you see it?"
            if variant = "2": "Ok, so the button array module should be a 3 x 4 array of round buttons. So that's three columns and four rows. Most of the buttons are grey with a colorful border but there should be one button that is filled with the same color as its border. That button is the active button. Can you see it?"
            if variant = "3": "The button array module should consist of 12 buttons, structured in rows and columns. One button should be filled in (this is the active button) and all the other ones should be grey in the middle but have a colored border. Do you see it?"
        if module = "warp_drive_percent"
            if variant = "1": "The Warp Drive Power is shown in a horizontal display. The power is given as a percentage and displayed by how much of the indicator is filled blue. Do you see it?"
            if variant = "2": "Ok, so there should be a horizontal bar somewhere with a blue border. Inside the bar, there is a percentage given. That is the warp drive power. Can you see it?"
            if variant = "3": "The warp drive power is a percentage somewhere on the dashboard. It is inside a horizontal indicator with a blue border. Do you see it?"

#-------------Templates for System Explain---------------#
# Dials Module
template explain(num_half_dials, explanation, variant)
    if num_half_dials = "2"
        if explanation = "green_slider"
            if variant = "1": "Okay, based on what you've said there should be two half-circle dials and the slider should be green. "
            if variant = "2": "Alright, so there should be two half-circle dials and the slider is green. "
            if variant = "3": "If I have this correct, there are two half-circle dials and the slider is green. "
        if explanation = "left_dial_even"
            if variant = "1": "Okay, based on what you've said there should be two half-circle dials, the slider should not be green, and the left dial should be pointed to an even number. "
            if variant = "2": "Alright, so there should be two half-circle dials, a slider that is not green, and a left dial pointing to an even number. "
            if variant = "3": "If I understand correctly, there are two half-circle dials and the slider is not green, but the left dial points to an even number. "
        if explanation = "right_dial_right"
            if variant = "1": "Okay, based on what you've said there should be two half-circle dials, the slider is not green, the left dial is pointed to an odd number and the right dial is pointed to the right. "
            if variant = "2": "Alright, so there are two half-circle dials, the slider isn't green, the left dial is pointing to an odd number, and the right dial is pointing to the right side. "
            if variant = "3": "If I have this correct, there are two half-circle dials, the slider is not green, the left dial points to an odd number, and the right dial points to the right. "
        if explanation = "right_dial_not_right"
            if variant = "1": "Okay, based on what you've said there should be two half-circle dials, the slider should not be green, the left dial should point to an odd number and the right dial isn't pointed to the right. "
            if variant = "2": "Alright, so there should be two half-circle dials, the slider is not green, the left dial pointing to an odd number, and the right one does not point to the right side. "
            if variant = "3": "So there are two half-circle dials, the slider is not green, the left dial points to an odd number and the right dial doesn't point to the right. "


# Button Sequence Module
template explain(color_seq, num_enabled, explanation, variant)
    if explanation = "no_amber"
        if variant = "1": "Okay, based on what you've said, there should be a total of {decode_number(num_enabled)} clickable (colorful border) buttons but none of them is amber. "
        if variant = "2": "Alright, so there should be {decode_number(num_enabled)} clickable buttons in the module and none of them is amber. "
        if variant = "3": "If I understand correctly, none of the {decode_number(num_enabled)} clickable buttons in the module is amber. "
    if explanation = "last_blue"
        if variant = "1": "Okay, based on what you've said, there should be a total of {decode_number(num_enabled)} clickable (colored border) buttons, and the last of them is blue. "
        if variant = "2": "Alright, so there should be {decode_number(num_enabled)} clickable buttons in the module and the last one of them is blue. "
        if variant = "3": "If I have this correct, the last one of the {decode_number(num_enabled)} total clickable buttons in this module is blue. "
    if explanation = "several_blue"
        if variant = "1": "Okay, based on what you've said, there should be a total of {decode_number(num_enabled)} clickable (colorful border) buttons, and at least two of them are blue. "
        if variant = "2": "Alright, so there should be {decode_number(num_enabled)} clickable buttons and more than one of them are blue. "
        if variant = "3": "If I understand correctly, more than one of the {decode_number(num_enabled)} total clickable buttons in this module are blue. "
    if explanation = "several_green_high_warp_drive"
        if variant = "1": "Okay, based on what you've said, there should be a total of {decode_number(num_enabled)} clickable (colorful border) buttons, multiple of which are green, and the warp drive power is above 25%. "
        if variant = "2": "Alright, so there should be {decode_number(num_enabled)} clickable buttons in the module, multiple of which are green. Additionally, the warp drive power is above 25%. "
        if variant = "3": "If I have this correct, our warp drive power is above 25% and more than one of the {decode_number(num_enabled)} clickable buttons in the module are green. "
    if explanation = "last_amber_no_blue"
        if variant = "1": "Okay, based on what you've said, there should be a total of {decode_number(num_enabled)} clickable (colored border) buttons, none of them are blue, but the last one is amber. "
        if variant = "2": "Alright, so there should be {decode_number(num_enabled)} clickable buttons in the module, last one is amber and there are no blue buttons. "
        if variant = "3": "If I understand correctly, none of the {decode_number(num_enabled)} clickable buttons in the module are blue, but the last one is amber. "
    if explanation = "one_green"
        if variant = "1": "Okay, based on what you've said, there should be a total of {decode_number(num_enabled)} clickable (colorful border) buttons, exactly one of which is green. "
        if variant = "2": "Alright, so there should be {decode_number(num_enabled)} clickable buttons in the module and exactly one is green. "
        if variant = "3": "If I have this correct, exactly one of the {decode_number(num_enabled)} clickable buttons in the module is green. "
    if explanation = "several_green_low_warp_drive"
        if variant = "1": "Okay, based on what you've said, there should be a total of {decode_number(num_enabled)} clickable (colored border) buttons, of which multiple are green, and our warp drive power is below 50%. "
        if variant = "2": "Alright, so there should be {decode_number(num_enabled)} clickable buttons in the module and more than one of them are green. Also, the warp drive power is below 50%. "
        if variant = "3": "If I understand correctly, our warp drive power is below 50% and more than one of the {decode_number(num_enabled)} clickable buttons in this module are green. "
    if explanation = "one_amber_several_green"
        if variant = "1": "Okay, based on what you've said, there should be a total of {decode_number(num_enabled)} clickable (colorful border) buttons, of which more than one are green and exactly one is amber. "
        if variant = "2": "Alright, so there should be {decode_number(num_enabled)} clickable buttons in the module, more than one of them are green and exactly one is amber. "
        if variant = "3": "If I have this correct, exactly one of the {decode_number(num_enabled)} clickable buttons in this module is amber and multiple other ones are green. "
    if explanation = "same_color"
        if variant = "1": "Okay, based on what you've said, there should be a total of {decode_number(num_enabled)} clickable (colored border) buttons, and all of them have the same color. "
        if variant = "2": "Alright, so there should be {decode_number(num_enabled)} clickable buttons in this module, all of which are the same color. "
        if variant = "3": "If I understand correctly, every one of the {decode_number(num_enabled)} clickable buttons in this module has the same color. "
    if explanation = "default"
        if num_enabled = "3"
            if variant = "1": "Okay, based on what you've said, there should be a total of {decode_number(num_enabled)} clickable (colorful border) buttons. One button is amber, the last button isn't blue, and at most one button in the sequence is blue. "
            if variant = "2": "Alright, so there should be {decode_number(num_enabled)} clickable buttons in this module. We don't have multiple blue buttons in the sequence and the last button isn't blue either. But there is an amber button. "
            if variant = "3": "If I have this correct, one of the {decode_number(num_enabled)} clickable buttons in this module is amber, there aren't multiple blue ones and the last button is not blue either. "
        if num_enabled = "4"
            if variant = "1": "Okay, based on what you've said, there should be a total of {decode_number(num_enabled)} clickable (colored border) buttons, none of them are green and no more than one is blue. "
            if variant = "2": "Alright, so there should be {decode_number(num_enabled)} clickable buttons in this module, no green buttons, and at most one blue button. "
            if variant = "3": "If I understand correctly, none of the {decode_number(num_enabled)} clickable buttons in this module are green and no more than one is blue. "
        if num_enabled = "5"
            if variant = "1": "Okay, based on what you've said, the button sequence should be: {serialize_list(color_seq)}. "
            if variant = "2": "Alright, so there should be {decode_number(num_enabled)} clickable buttons in this order: {serialize_list(color_seq)}. "
            if variant = "3": "If I have this correct, the buttons sequence is: {serialize_list(color_seq)}. "

# Switch Module
template explain(color_seq, position, explanation, variant, *slots)
    if explanation = "first_blue_next_green"
        if variant = "1"
            "Okay, for the {decode_position(position)} switch, it's the first blue switch, and it is followed by a green switch. "
            if position = "0": "Okay, for the first switch, this is the first blue one, and it's followed by a green one. "
        if variant = "2"
            "Alright, for the {decode_position(position)} switch: from what you've said, this is the first blue switch and followed by a green one. "
            if position = "0": "Alright, for the first switch: from what you've said, this is blue and followed by a green switch. "
        if variant = "3"
            "So, for the {decode_position(position)} switch, this should be the first blue switch and the one after that should be green. "
            if position = "0": "So, for the first switch, it should be blue and the one after that should be green. "
    if explanation = "first_blue"
        if variant = "1"
            "Okay, for the {decode_position(position)} switch, it's the first blue switch and the next switch is not green. "
            if position = "0": "Okay, for the first switch, it's blue and the next switch is not green. "
        if variant = "2"
            "Alright, for the {decode_position(position)} switch: from what you've said, it's the first blue one and it is not followed by a green one. "
            if position = "0": "Alright, for the first switch, from what you've said, this is blue and it is not followed by a green one. "
        if variant = "3"
            "So, for the {decode_position(position)} switch, it should be the first blue switch and the one after that should not be green. "
            if position = "0": "So, for the first switch, it is blue and the one after that isn't be green. "
    if explanation = "second_blue_after_amber_or_blue"
        if variant = "1": "Okay, for the {decode_position(position)} switch, should be the second blue switch, and the previous switch should be amber or blue. "
        if variant = "2": "Alright, for the {decode_position(position)} switch: from what you've said, this is the second blue one, and the switch before it is amber or blue. "
        if variant = "3": "So, for the {decode_position(position)} switch,this is the second blue switch and the one before that is either amber or blue. "
    if explanation = "second_blue"
        if variant = "1": "Okay, for the {decode_position(position)} switch, it should be the second blue switch, and the previous switch should not be amber nor blue. "
        if variant = "2": "Alright, for the {decode_position(position)} switch: from what you've said, it's the second blue one, and the switch before it is neither amber nor blue. "
        if variant = "3": "So, for the {decode_position(position)} switch, this is the second blue switch and it doesn't come after an amber or a blue switch. "
    if explanation = "third_blue_a_green"
        if variant = "1": "Okay, for the {decode_position(position)} switch, it's the third blue switch and there is at least one green switch. "
        if variant = "2": "Alright, for the {decode_position(position)} switch: from what you've said, this is the third blue one, and there is at least one green switch. "
        if variant = "3": "So, for the {decode_position(position)} switch, it should be the third blue switch and another one should be green. "
    if explanation = "third_blue"
        if variant = "1": "Okay, for the {decode_position(position)} switch, it's the third blue switch and there aren't any green switches in the sequence. "
        if variant = "2": "Alright, for the {decode_position(position)} switch: from what you've said, it's the third blue one and there are no green switches. "
        if variant = "3": "So, for the {decode_position(position)} switch, it should be the third blue switch and there should not be any green ones. "
    if explanation = "first_green_a_amber_green_slider"
        if variant = "1"
            "Okay, for the {decode_position(position)} switch, it is the first green switch, there is an amber switch in the sequence, and the slider is green. "
            if position = "0": "Okay, for the first switch, it's green, there's an amber switch in the sequence, and the slider is green. "
        if variant = "2"
            "Alright, for the {decode_position(position)} switch: from what you've said, it's the first green one. There is an amber switch and the slider is currently green. "
            if position = "0": "Alright, for the first switch: it's green, there's an amber switch, and the slider is currently green. "
        if variant = "3"
            "So, for the {decode_position(position)} switch, this should be the first green switch, there should also be an amber one, and the slider should be green. "
            if position = "0": "So, for the first switch, it should be green, there should be at least one amber switch, and the slider should be green. "
    if explanation = "first_green"
        if variant = "1"
            "Okay, for the {decode_position(position)} switch, it's the first green, and the slider isn't green. "
            if position = "0": "Okay, for the first switch, it's green switch, and the slider is not green. "
        if variant = "2"
            "Alright, for the {decode_position(position)} switch: from what you've said, this is the first green one and the slider is currently not green. "
            if position = "0": "Alright for the first switch: this is green and the slider is currently not green. "
        if variant = "3"
            "So, for the {decode_position(position)} switch, this should be the first green switch and the slider shouldn't be green. "
            if position = "0": "So, the first switch should be green and the slider should not be green. "
    if explanation = "second_green_after_green"
        if variant = "1": "Okay, for the {decode_position(position)} switch, it is the second green switch in the sequence and the previous switch is also green. "
        if variant = "2": "Alright, from what you've said: the {decode_position(position)} switch is the second green one and the one before is also green. "
        if variant = "3": "So, the {decode_position(position)} switch should be the second green switch and the one before that should be green too. "
    if explanation = "second_green"
        if variant = "1": "Okay, for the {decode_position(position)} switch, it is the second green switch and the previous one is not green. "
        if variant = "2": "Alright, from what you've said: the {decode_position(position)} switch is the second green one, but the one before it isn't green. "
        if variant = "3": "So, the {decode_position(position)} switch should be the second green switch and the one before that should not be green. "
    if explanation = "fourth_green_red_slider"
        if variant = "1": "Okay, for the last switch, it, and all previous switches, are green and the slider is red. "
        if variant = "2": "Alright, from what you've said: the {decode_position(position)} switch is also green and the slider is red. "
        if variant = "3": "So, the last switch should also be green and the slider should be red. "
    if explanation = "fourth_green"
        if variant = "1": "Okay, for the last switch, it's the fourth green switch and the slider isn't be red. "
        if variant = "2": "Alright, from what you've said, the {decode_position(position)} switch is also green and the slider is not red. "
        if variant = "3": "So, the last switch should also be green and the slider shouldn't be red. "
    if explanation = "first_amber_next_green"
        if variant = "1"
            "Okay, for the {decode_position(position)} switch, it's the first amber switch and the next switch is green. "
            if position = "0": "Okay, for the first switch, it's amber and the next switch is green. "
        if variant = "2"
            "Alright, for the {decode_position(position)} switch, from what you've said, ths is the first amber one and the next switch is green. "
            if position = "0": "Alright, for the first switch: from what you've said, it's amber and the next one is green. "
        if variant = "3"
            "So, for the {decode_position(position)} switch, this should be the first amber switch and the one after that should be green. "
            if position = "0": "So, for the first switch, it should be amber and the one after that should be green. "
    if explanation = "first_amber"
        if variant = "1"
            "Okay, for the {decode_position(position)} switch, it is the first amber switch and the next switch isn't green. "
            if position = "0": "Okay, for the first switch it's amber and the next switch isn't green. "
        if variant = "2"
            "Alright, for the {decode_position(position)} switch: from what you've said, this is the first amber switch and the next switch is not green. "
            if position = "0": "Alright, for the first switch: from what you've said, it's amber and the next one isn't green. "
        if variant = "3"
            "So, for the {decode_position(position)} switch, this should be the first amber switch and the one after that should not be green. "
            if position = "0": "So, for the first switch, it should be amber and the one after that should not be green. "
    if explanation = "second_amber_after_amber_or_blue"
        if variant = "1": "Okay, for the {decode_position(position)} switch, it's the second amber switch in the sequence, and the previous switch is amber or blue. "
        if variant = "2": "Alright, for the {decode_position(position)} switch: from what you've said, this is the second amber one, and the one before is either amber or blue. "
        if variant = "3": "So, for the {decode_position(position)} switch, it should be the second amber switch and the one before that should be amber or blue. "
    if explanation = "second_amber"
        if variant = "1": "Okay, for the {decode_position(position)} switch, it's the second amber switch and not preceded by an amber or blue switch. "
        if variant = "2": "Alright, for the {decode_position(position)} switch: from what you've said, this is the second amber one, and the one before is neither amber nor blue. "
        if variant = "3": "So, for the {decode_position(position)} switch, this should be the second amber switch and the one before that should not be amber and also not blue. "
    if explanation = "third_amber_a_green"
        if variant = "1": "Okay, for the {decode_position(position)} switch, it is the third amber switch and there is also a green switch in the sequence. "
        if variant = "2": "Alright, for the {decode_position(position)} switch: from what you've said, it's the third amber one and another switch in the sequence is green. "
        if variant = "3": "So, for the {decode_position(position)} switch, this should be the third amber switch and there should be another green switch. "
    if explanation = "third_amber"
        if variant = "1": "Okay, for the {decode_position(position)} switch, it is the third amber switch but there is no green switch in the sequence. "
        if variant = "2": "Alright, for the {decode_position(position)} switch: from what you've said, this is the third amber one and no switch in the sequence is green. "
        if variant = "3": "So, for the {decode_position(position)} switch, it should be the third amber switch and there should not be another green switch. "

# Button Array Module
template explain(active_column, current_round, variant)
    if variant = "1": "Okay, we're in the {decode_position(current_round)} round, and the active button should be in the {decode_position(active_column)} column."
    if variant = "2": "Alright, this is the {decode_position(current_round)} stage and the active button is in the {decode_position(active_column)} column."
    if variant = "3": "So, it's now the {decode_position(current_round)} round and you said the active button is in the {decode_position(active_column)} column..."



#-------------Templates for System NextModule---------------#
template nextmodule(first, module, variant)
    if first = "True": " The first module is the {decode_module(module)}. {describe(module)}"
    if first = "False"
        if variant = "1": "Okay, let's move on the the next module: the {decode_module(module)}. {describe(module)}"
        if variant = "2": "So, the next module is the {decode_module(module)}. {describe(module)}"
        if variant = "3": "Our next module is the {decode_module(module)}. {describe(module)}"

#------------System Confirms--------------#
template confirmaction(variant): 
    if variant = "1": "Did you do it?"
    if variant = "2": "Did it work?"
    if variant = "3": "Are you done?"


# seq_complete, current_switch_ind, and current_round might be given as parameters but they should not given to the user
# check therefore first if one of the parameters is given to explicitly exclude it
# if the name of the module is given, use it to disambiguate beliefs
template confirm(seq_complete, module, variant, *beliefs): "Are you sure that {for_entry(beliefs, "info_by_module", ", ", ", and ", module)}?"
template confirm(seq_complete, variant, *beliefs): "Are you sure that {for_entry(beliefs, "info", ", ", ", and ")}?"
template confirm(current_switch_ind, module, variant, *beliefs): "Are you sure that {for_entry(beliefs, "info_by_module", ", ", ", and ", module)}?"
template confirm(current_switch_ind, variant, *beliefs): "Are you sure that {for_entry(beliefs, "info", ", ", ", and ")}?"
template confirm(current_round, variant): "I'm sorry, let's start over and see if we can figure out where we went wrong."
template confirm(current_round, module, variant, *beliefs): "Are you sure that {for_entry(beliefs, "info_by_module", ", ", ", and ", module)}?"
template confirm(current_round, variant, *beliefs): "Are you sure that {for_entry(beliefs, "info", ", ", ", and ")}?"

# if seq_complete, current_switch_ind, and current_round are not given, list all slots
template confirm(module, variant, *beliefs): "Are you sure that {for_entry(beliefs, "info_by_module", ", ", ", and ", module)}?"
template confirm(variant, *beliefs): "Are you sure that {for_entry(beliefs, "info", ", ", ", and ")}?"